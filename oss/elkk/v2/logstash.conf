input {
  kafka {
    bootstrap_servers => "192.168.1.10:9092"
    topics => ["filebeat"]
    auto_offset_reset => "earliest"
    enable_auto_commit => "false"
    security_protocol => "SASL_PLAINTEXT"
    sasl_mechanism => "PLAIN"
    sasl_jaas_config => "org.apache.kafka.common.security.plain.PlainLoginModule required username='walter' password='P@ss1234';"
  }
}

filter {
  json {
    source => "message"
    target => "msg_obj"
    skip_on_invalid_json => true
  }
  mutate {
    add_field => {
      "[app]" => ["%{[msg_obj][fields][app]}"]
      "[device_id]" => ["%{[msg_obj][fields][device_id]}"]
      "[product_env]" => ["%{[msg_obj][fields][env]}"]
      "[box_ip]" => ["%{[msg_obj][fields][ip]}"]
      "[msg]" => ["%{[msg_obj][message]}"]
      "[product_tag]" => ["%{[msg_obj][tags]}"]
    }
    remove_field => ["@version", "[event]", "[message]", "[msg_obj]"]
  }
  if [app] == "rus-agent" {
    grok {
      match => {"msg" => "\[%{TIMESTAMP_ISO8601:birth_dt}\.%{INT:birth_ms}\]\ \[%{NOTSPACE:module}\]\ \[%{LOGLEVEL:log_level}\]\ \[%{INT:thread_id}]\ \[%{NOTSPACE:source_pos}\]\ \(%{NOTSPACE:component}\)\ %{GREEDYDATA:desc}"}
    }
    mutate {
      add_field => {"birth" => "%{birth_dt}.%{birth_ms}"}
      remove_field => ["birth_dt", "birth_ms"]
    }
  } else if [app] == "report-server" {
    grok {
      match => {"msg" => "%{TIMESTAMP_ISO8601:birth_dt}\ %{LOGLEVEL:log_level}\ \[%{NOTSPACE:module}\]\ \(%{NOTSPACE:component}\)\ %{GREEDYDATA:desc}"}
    }
    mutate {
      add_field => ["birth", "%{birth_dt}.000"]
      remove_field => ["birth_dt"]
    }
  } else {
    #drop { }
  }
  date {
    match => ["birth", "yyyy-MM-dd HH:mm:ss.SSS"]
    timezone => "+08:00"
  }
  mutate {
    uppercase => ["log_level"]
    remove_field => ["birth"]
  }
  if "metrics=" in [desc] {
    grok {
      match => {"desc" => "metrics=%{GREEDYDATA:metrics_str}"}
    }
    json {
      source => "metrics_str"
      target => "metrics"
      skip_on_invalid_json => true
    }
    mutate {
      remove_field => ["metrics_str"]
    }
  }
  #ruby {
  #  code => "event.set('[message][@timestamp]', (event.get('@timestamp').to_f.round(3)*1000).to_i)"
  #}
}

output {  
  elasticsearch {
    hosts => ["http://192.168.1.10:9200"]
    user => "elastic"         
    password => "walter1234"
    index => "walter-%{+YYYY.MM.dd}" 
  }
}
